name: Release and Publish Docker Image

on:
  release:
    types: [published] # Run only when a release is published

  workflow_dispatch:
    inputs:
      tag:
        description: "Tag to deploy"
        required: true

jobs:
  build-and-push-docker-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract release tag
        id: extract_release_tag
        run: |

          if [[ -n "${{ github.event.inputs.tag }}" ]]; then
            echo "::set-output name=tag::${{ github.event.inputs.tag }}"
          elif [[ -n "${{ github.event.release.tag_name }}" ]]; then
            echo "::set-output name=tag::${{ github.event.release.tag_name }}"
          else
            echo "::error title=Tag not found::No tag found in either github.event.inputs.tag or github.event.release.tag_name"
            exit 1 # Exit with error if no tag is found
          fi

      - name: Build and tag Docker image with release version
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          tags: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:${{ steps.extract_release_tag.outputs.tag }}
          push: false

      - name: Build and tag Docker image with 'latest' tag
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          tags: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:latest
          push: false

      - name: Push Docker images
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
